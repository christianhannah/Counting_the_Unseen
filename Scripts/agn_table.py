import numpy as npfrom astropy.table import Table, join, vstack, Column, MaskedColumnimport matplotlib.pyplot as pltimport matplotlib.colors as colorsfrom astroquery.ned import Nedfrom astroquery.simbad import Simbadfrom astropy.coordinates import Anglefrom astropy import units as ufrom astropy.coordinates import SkyCoord#from matplotlib.mlab import bivariate_normalplt.close('all')ufontsize=16plt.rc('text', usetex=True)plt.rc('font', family='sans-serif')plt.rc('xtick', labelsize=ufontsize) plt.rc('ytick', labelsize=ufontsize) plt.rc('text.latex', preamble=r'\usepackage{cmbright}')cbs=Table.read('./Anil_Ho97_AGN_sample/ash_only_sample.csv')coords=[]for i in range(0,len(cbs)):    ra=Angle((cbs['RA'][i]+" hours"))    dec=Angle((cbs['Dec'][i]+" degrees"))#    print(ra,dec)    coords.append(SkyCoord(ra=ra,dec=dec))cbs['coords']=coordsbi=Table.read('./Anil_Ho97_AGN_sample/bi20.fits')bi['RAJ2000'].unit=u.degreebi['DEJ2000'].unit=u.degreebi['coords']=SkyCoord(ra=bi['RAJ2000'],dec=bi['DEJ2000'])idx, d2d, d3d = cbs['coords'].match_to_catalog_sky(bi['coords'])max_sep=0.1*u.degreesep_constraint = d2d > max_seplxmask=(d2d > max_sep) | np.isnan(bi['logLX'][idx])bilx=MaskedColumn(bi['logLX'][idx],mask=lxmask)biclass=MaskedColumn(bi['Class'][idx],mask=sep_constraint)biname=MaskedColumn(np.char.rstrip(bi['Name'][idx]),mask=sep_constraint)bidist=MaskedColumn(bi['Dist'][idx],mask=sep_constraint)cbs['biclass']=biclasscbs['biname']=binamecbs['bidist']=bidistcbs['bilx']=bilx+np.log10(cbs['Distance']**2/cbs['bidist']**2)#cbs['Name','bilx']#h09=Table.read('h09ab_matched.fits')h97=Table.read('./Anil_Ho97_AGN_sample/ho97_tab_4_10.fits')a=np.array(h97['Name2'])b=a.astype(str)#Simbad.add_votable_fields('typed_id')#Simbad.TIMEOUT=600#Simbad.ROW_LIMIT=500#h97s=Simbad.query_objects(b)h97s=Table.read('./Anil_Ho97_AGN_sample/ho97_simbad_query.csv')#h97['match_name']= np.char.rstrip(h97['Name2'])#h09['match_name']=np.char.rstrip(h09['NAME'])#hoall=join(h97,h09,keys='match_name',join_type='left')#hoall['RA']=h97s['RA']#hoall['DEC']=h97s['DEC']h97s['Name2']=h97s['TYPED_ID']hoall=join(h97,h97s,keys='Name2',join_type='left')hcoords=[]for i in range(0,len(hoall)):    ra=Angle((hoall['RA'][i]+" hours"))    dec=Angle((hoall['DEC'][i]+" degrees"))#    print(ra,dec)    hcoords.append(SkyCoord(ra=ra,dec=dec))hoall['coords']=hcoordshidx, hd2d, hd3d = cbs['coords'].match_to_catalog_sky(hoall['coords'])hsep_constraint = hd2d > max_sephoclass=MaskedColumn(hoall['Class1'][hidx],mask=hsep_constraint)honame=MaskedColumn(hoall['Name2'][hidx],mask=hsep_constraint)cbs['hoclass']=hoclasscbs['honame']=honamecbs['Name','hoclass','biclass','bilx'].write('agn_table_raw.tex', overwrite=True)